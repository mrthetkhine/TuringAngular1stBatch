{
	"info": {
		"_postman_id": "c1eb0975-9db3-45ea-a4f9-121574b69ea0",
		"name": "AngularBackend",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "5339096"
	},
	"item": [
		{
			"name": "ToDo",
			"item": [
				{
					"name": "GetAllToDos",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/to-do",
							"host": [
								"{{url}}"
							],
							"path": [
								"to-do"
							]
						}
					},
					"response": []
				},
				{
					"name": "GetAllCompletedToDos",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/to-do/completed",
							"host": [
								"{{url}}"
							],
							"path": [
								"to-do",
								"completed"
							]
						}
					},
					"response": []
				},
				{
					"name": "CreateToDo",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "Bearer token",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\":\"task 6\",\n    \"completed\":true\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/to-do",
							"host": [
								"{{url}}"
							],
							"path": [
								"to-do"
							]
						}
					},
					"response": []
				},
				{
					"name": "UpdateToDo",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "Bearer token",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\":\"task updated two\",\n    \"completed\":true\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/to-do/63cbde9606b9a29ade54f561",
							"host": [
								"{{url}}"
							],
							"path": [
								"to-do",
								"63cbde9606b9a29ade54f561"
							]
						}
					},
					"response": []
				},
				{
					"name": "GetToDo",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/to-do/63cbde9606b9a29ade54f561",
							"host": [
								"{{url}}"
							],
							"path": [
								"to-do",
								"63cbde9606b9a29ade54f561"
							]
						}
					},
					"response": []
				},
				{
					"name": "DeleteToDo",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{url}}/to-do/63cbde9606b9a29ade54f561",
							"host": [
								"{{url}}"
							],
							"path": [
								"to-do",
								"63cbde9606b9a29ade54f561"
							]
						}
					},
					"response": []
				},
				{
					"name": "Query",
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"host": true
						}
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "host",
								"value": "our own host",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{url}}/to-do/query?title=something",
							"host": [
								"{{url}}"
							],
							"path": [
								"to-do",
								"query"
							],
							"query": [
								{
									"key": "title",
									"value": "something"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "WildCard",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"todo\":\"Yes something\"\n}"
						},
						"url": {
							"raw": "{{url}}/to-do/abhellocd",
							"host": [
								"{{url}}"
							],
							"path": [
								"to-do",
								"abhellocd"
							]
						}
					},
					"response": []
				},
				{
					"name": "HostRequest",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "host",
								"value": "admin.example.com",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://localhost:3000",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000"
						}
					},
					"response": []
				},
				{
					"name": "Exception",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/to-do/problem",
							"host": [
								"{{url}}"
							],
							"path": [
								"to-do",
								"problem"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "LibSpecific",
			"item": [
				{
					"name": "GetAll",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:3000/lib-specific",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"lib-specific"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "http://localhost:3000/lib-specific",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"lib-specific"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Actor",
			"item": [
				{
					"name": "GetAllActor",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/actors",
							"host": [
								"{{url}}"
							],
							"path": [
								"actors"
							]
						}
					},
					"response": []
				},
				{
					"name": "GetActor",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/actors/63cd2bbf7bad73bff4219373",
							"host": [
								"{{url}}"
							],
							"path": [
								"actors",
								"63cd2bbf7bad73bff4219373"
							]
						}
					},
					"response": []
				},
				{
					"name": "CreateActor",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\":\"Test actors\",\n    \"gender\":\"Female\"\n}"
						},
						"url": {
							"raw": "{{url}}/actors",
							"host": [
								"{{url}}"
							],
							"path": [
								"actors"
							]
						}
					},
					"response": []
				},
				{
					"name": "UpdateActor",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\":\"Katewin Slect\",\n    \"gender\":\"Female\"\n}"
						},
						"url": {
							"raw": "{{url}}/actors/63cd2dfe39a93538253d7b8d",
							"host": [
								"{{url}}"
							],
							"path": [
								"actors",
								"63cd2dfe39a93538253d7b8d"
							]
						}
					},
					"response": []
				},
				{
					"name": "DeleteActor",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\":\"Kate WinSlect\",\n    \"gender\":\"Female\"\n}"
						},
						"url": {
							"raw": "{{url}}/actors/63cd318ebef0d36aaf00a395",
							"host": [
								"{{url}}"
							],
							"path": [
								"actors",
								"63cd318ebef0d36aaf00a395"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Movie",
			"item": [
				{
					"name": "GetAllMovies",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6ImFkbWluIiwic3ViIjoiNjNkZTVjOWNmOWY4OTI0MThjOTRmZTBlIiwiaWF0IjoxNjc1NjAwMzEzLCJleHAiOjE2NzgxOTIzMTN9.Wpl9CMTZghOjH_TRIy6IlgqiS6ny_9m47_jm_K498Ns",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{url}}/movies",
							"host": [
								"{{url}}"
							],
							"path": [
								"movies"
							]
						}
					},
					"response": []
				},
				{
					"name": "GetMovie",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6ImFkbWluIiwic3ViIjoiNjNkZTVjOWNmOWY4OTI0MThjOTRmZTBlIiwiaWF0IjoxNjc1NjAwMzEzLCJleHAiOjE2NzgxOTIzMTN9.Wpl9CMTZghOjH_TRIy6IlgqiS6ny_9m47_jm_K498Ns",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{url}}/movies/63cbf0e76bcbceebad5e18ad",
							"host": [
								"{{url}}"
							],
							"path": [
								"movies",
								"63cbf0e76bcbceebad5e18ad"
							]
						}
					},
					"response": []
				},
				{
					"name": "UpdateMovie",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n   \n    \"title\": \"Titanic Update\",\n    \"year\": 1995,\n    \"genres\": [\n        \"Drama\"\n    ],\n    \"actors\": [\"63cd2bbf7bad73bff4219373\"],\n    \"directors\": [\"63cd34830e03eb5cbfdbbee3\"],\n    \"reviews\": []\n    \n}"
						},
						"url": {
							"raw": "{{url}}/movies/63cbf0e76bcbceebad5e18ad",
							"host": [
								"{{url}}"
							],
							"path": [
								"movies",
								"63cbf0e76bcbceebad5e18ad"
							]
						}
					},
					"response": []
				},
				{
					"name": "CreateMovie",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\":\"Avata-2\",\n    \"year\":200,\n    \"genres\":[\"Drama\"],\n    \"actors\":[\"63cd2bbf7bad73bff4219373\"],\n    \"directors\":[\n        \"63cd34830e03eb5cbfdbbee3\"\n    ],\n    \"reviews\":[\n        {\n            \"rating\":5,\n            \"review\":\"Good\"\n        },\n        {\n            \"rating\":3,\n            \"review\":\"Nice\"\n        }\n    ]\n}"
						},
						"url": {
							"raw": "{{url}}/movies",
							"host": [
								"{{url}}"
							],
							"path": [
								"movies"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Directors",
			"item": [
				{
					"name": "GetAllDirector",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/directors",
							"host": [
								"{{url}}"
							],
							"path": [
								"directors"
							]
						}
					},
					"response": []
				},
				{
					"name": "CreateDirector",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\":\"Christopher Nolan\",\n    \"gender\":\"Male\",\n    \"address\":\"NewYork\"\n}"
						},
						"url": {
							"raw": "{{url}}/directors",
							"host": [
								"{{url}}"
							],
							"path": [
								"directors"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Auth",
			"item": [
				{
					"name": "Register",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\":\"admin\",\n    \"password\":\"admin\"\n}"
						},
						"url": {
							"raw": "{{url}}/auth/register",
							"host": [
								"{{url}}"
							],
							"path": [
								"auth",
								"register"
							]
						}
					},
					"response": []
				},
				{
					"name": "Login",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\":\"admin\",\n    \"password\":\"admin\"\n}"
						},
						"url": {
							"raw": "http://localhost:3000/auth/login",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"auth",
								"login"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "HomePage",
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "http://localhost:3000",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000"
				}
			},
			"response": []
		}
	]
}